version: 2.1

# https://circleci.com/developer/orbs
orbs:
  node: circleci/node@4.1.0

jobs:
  test-frontend:
    docker:
      - image: node:14.16.0-alpine3.11
        environment:
          NODE_PATH: .

    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          app-dir: ./frontend
          cache-version: v1.0
      - run:
          name: lint
          working_directory: ./frontend
          command: yarn lint
      - run:
          name: typecheck
          working_directory: ./frontend
          command: yarn typecheck
      - run:
          name: test
          working_directory: ./frontend
          command: yarn test
      - run:
          name: build
          working_directory: ./frontend
          environment:
            NODE_ENV: production
          command: yarn build
  test-backend:
    docker:
      - image: node:14.16.0-alpine3.11
        environment:
          NODE_PATH: .
          NODE_ENV: test
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: test
          PGPORT: 5432
          DATABASE_URL: "postgres://${PGUSER}:${PGPASSWORD}@localhost:${PGPORT}/${PGDATABASE}"

      - image: postgres:13.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: snorlax
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          app-dir: ./backend
          cache-version: v1.0
      - run:
          name: Run linter
          working_directory: ./backend
          command: yarn lint
      - run:
          name: Typecheck
          working_directory: ./backend
          command: yarn typecheck
      - run:
          name: Waiting for PostgreSQL
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Execute migrations
          working_directory: ./backend
          command: yarn migrate:up
      - run:
          name: Run unit tests
          working_directory: ./backend
          environment:
          command: yarn jest
workflows:
  version: 2
  
  test-build-and-deploy:
    jobs:
      - test-frontend
      - test-backend
